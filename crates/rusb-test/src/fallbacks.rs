//! Device data dumped via usbdk

use antigen_hid::report::report_descriptor::ReportDescriptorData;

pub fn fallback_t16000m() -> ReportDescriptorData {
    let mut overrides = ReportDescriptorData::default();
    overrides.insert(T16000M_VID, T16000M_PID, &T16000M_REPORT[..]);
    overrides.insert(TWCS_VID, TWCS_PID, &TWCS_REPORT[..]);
    overrides.insert(TFRP_VID, TFRP_PID, &TFRP_REPORT[..]);
    overrides
}

pub fn fallback_dualshock_4() -> ReportDescriptorData {
    let mut overrides = ReportDescriptorData::default();
    overrides.insert(DUALSHOCK_4_VID, DUALSHOCK_4_PID, &DUALSHOCK_4_REPORT[..]);
    overrides
}

pub fn fallback_saturn_pad() -> ReportDescriptorData {
    let mut overrides = ReportDescriptorData::default();
    overrides.insert(
        SATURN_PAD_DINPUT_VID,
        SATURN_PAD_DINPUT_PID,
        &SATURN_PAD_DINPUT_REPORT[..],
    );
    //overrides.insert(SATURN_PAD_XINPUT_VID, SATURN_PAD_XINPUT_PID, &SATURN_PAD_XINPUT_REPORT[..]);
    overrides
}

pub const T16000M_VID: u16 = 0x044F;
pub const T16000M_PID: u16 = 0xB10A;
pub const T16000M_REPORT: [u8; 124] = [
    0x05, 0x01, 0x09, 0x04, 0xA1, 0x01, 0x05, 0x09, 0x19, 0x01, 0x29, 0x10, 0x15, 0x00, 0x25, 0x01,
    0x35, 0x00, 0x45, 0x01, 0x75, 0x01, 0x95, 0x10, 0x81, 0x02, 0x05, 0x01, 0x09, 0x39, 0x15, 0x00,
    0x25, 0x07, 0x35, 0x00, 0x46, 0x3B, 0x01, 0x65, 0x14, 0x75, 0x04, 0x95, 0x01, 0x81, 0x42, 0x81,
    0x01, 0x05, 0x01, 0x09, 0x30, 0x15, 0x00, 0x26, 0xFF, 0x3F, 0x35, 0x00, 0x46, 0xFF, 0x3F, 0x65,
    0x00, 0x75, 0x0E, 0x95, 0x01, 0x81, 0x02, 0x75, 0x02, 0x81, 0x01, 0x09, 0x31, 0x75, 0x0E, 0x81,
    0x02, 0x75, 0x02, 0x81, 0x01, 0x09, 0x35, 0x09, 0x36, 0x15, 0x00, 0x26, 0xFF, 0x00, 0x35, 0x00,
    0x46, 0xFF, 0x00, 0x65, 0x00, 0x75, 0x08, 0x95, 0x02, 0x81, 0x02, 0x06, 0x00, 0xFF, 0x27, 0xFF,
    0xFF, 0x00, 0x00, 0x09, 0x01, 0x75, 0x08, 0x95, 0x04, 0xB1, 0xA2, 0xC0,
];

pub const TWCS_VID: u16 = 0x044F;
pub const TWCS_PID: u16 = 0xB687;
pub const TWCS_REPORT: [u8; 118] = [
    0x05, 0x01, 0x09, 0x04, 0xA1, 0x01, 0x85, 0x01, 0x09, 0x30, 0x09, 0x31, 0x09, 0x35, 0x09, 0x33,
    0x09, 0x34, 0x09, 0x36, 0x09, 0x37, 0x15, 0x00, 0x26, 0xFF, 0x03, 0x75, 0x10, 0x95, 0x07, 0x81,
    0x02, 0x09, 0x32, 0x15, 0x00, 0x27, 0xFF, 0xFF, 0x00, 0x00, 0x75, 0x10, 0x95, 0x01, 0x81, 0x02,
    0x09, 0x39, 0x15, 0x00, 0x25, 0x07, 0x35, 0x00, 0x46, 0x3B, 0x01, 0x65, 0x14, 0x75, 0x04, 0x95,
    0x01, 0x81, 0x42, 0x65, 0x00, 0x05, 0x09, 0x19, 0x01, 0x29, 0x0E, 0x15, 0x00, 0x25, 0x01, 0x75,
    0x01, 0x95, 0x0E, 0x81, 0x02, 0x75, 0x06, 0x95, 0x01, 0x81, 0x01, 0x06, 0x00, 0xFF, 0x09, 0x21,
    0x75, 0x08, 0x95, 0x2C, 0x81, 0x02, 0x06, 0xF0, 0xFF, 0x09, 0x40, 0x85, 0xF1, 0x09, 0x47, 0x75,
    0x08, 0x95, 0x3F, 0xB1, 0x02, 0xC0,
];

pub const TFRP_VID: u16 = 0x044F;
pub const TFRP_PID: u16 = 0xB679;
pub const TFRP_REPORT: [u8; 46] = [
    0x05, 0x01, 0x09, 0x04, 0xA1, 0x01, 0x15, 0x00, 0x35, 0x00, 0x26, 0xFF, 0x03, 0x46, 0xFF, 0x03,
    0x09, 0x30, 0x09, 0x31, 0x09, 0x32, 0x75, 0x10, 0x95, 0x03, 0x81, 0x02, 0x06, 0x00, 0xFF, 0x09,
    0x20, 0x75, 0x08, 0x95, 0x25, 0x81, 0x02, 0x09, 0x21, 0x95, 0x20, 0x91, 0x02, 0xC0,
];

pub const DUALSHOCK_4_VID: u16 = 0x054C;
pub const DUALSHOCK_4_PID: u16 = 0x0CE6;
pub const DUALSHOCK_4_REPORT: [u8; 273] = [
    0x05, 0x01, 0x09, 0x05, 0xA1, 0x01, 0x85, 0x01, 0x09, 0x30, 0x09, 0x31, 0x09, 0x32, 0x09, 0x35,
    0x09, 0x33, 0x09, 0x34, 0x15, 0x00, 0x26, 0xFF, 0x00, 0x75, 0x08, 0x95, 0x06, 0x81, 0x02, 0x06,
    0x00, 0xFF, 0x09, 0x20, 0x95, 0x01, 0x81, 0x02, 0x05, 0x01, 0x09, 0x39, 0x15, 0x00, 0x25, 0x07,
    0x35, 0x00, 0x46, 0x3B, 0x01, 0x65, 0x14, 0x75, 0x04, 0x95, 0x01, 0x81, 0x42, 0x65, 0x00, 0x05,
    0x09, 0x19, 0x01, 0x29, 0x0F, 0x15, 0x00, 0x25, 0x01, 0x75, 0x01, 0x95, 0x0F, 0x81, 0x02, 0x06,
    0x00, 0xFF, 0x09, 0x21, 0x95, 0x0D, 0x81, 0x02, 0x06, 0x00, 0xFF, 0x09, 0x22, 0x15, 0x00, 0x26,
    0xFF, 0x00, 0x75, 0x08, 0x95, 0x34, 0x81, 0x02, 0x85, 0x02, 0x09, 0x23, 0x95, 0x2F, 0x91, 0x02,
    0x85, 0x05, 0x09, 0x33, 0x95, 0x28, 0xB1, 0x02, 0x85, 0x08, 0x09, 0x34, 0x95, 0x2F, 0xB1, 0x02,
    0x85, 0x09, 0x09, 0x24, 0x95, 0x13, 0xB1, 0x02, 0x85, 0x0A, 0x09, 0x25, 0x95, 0x1A, 0xB1, 0x02,
    0x85, 0x20, 0x09, 0x26, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0x21, 0x09, 0x27, 0x95, 0x04, 0xB1, 0x02,
    0x85, 0x22, 0x09, 0x40, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0x80, 0x09, 0x28, 0x95, 0x3F, 0xB1, 0x02,
    0x85, 0x81, 0x09, 0x29, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0x82, 0x09, 0x2A, 0x95, 0x09, 0xB1, 0x02,
    0x85, 0x83, 0x09, 0x2B, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0x84, 0x09, 0x2C, 0x95, 0x3F, 0xB1, 0x02,
    0x85, 0x85, 0x09, 0x2D, 0x95, 0x02, 0xB1, 0x02, 0x85, 0xA0, 0x09, 0x2E, 0x95, 0x01, 0xB1, 0x02,
    0x85, 0xE0, 0x09, 0x2F, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0xF0, 0x09, 0x30, 0x95, 0x3F, 0xB1, 0x02,
    0x85, 0xF1, 0x09, 0x31, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0xF2, 0x09, 0x32, 0x95, 0x0F, 0xB1, 0x02,
    0x85, 0xF4, 0x09, 0x35, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0xF5, 0x09, 0x36, 0x95, 0x03, 0xB1, 0x02,
    0xC0,
];

pub const SATURN_PAD_DINPUT_VID: u16 = 0x0079;
pub const SATURN_PAD_DINPUT_PID: u16 = 0x0011;
pub const SATURN_PAD_DINPUT_REPORT: [u8; 101] = [
    0x05, 0x01, 0x09, 0x04, 0xA1, 0x01, 0xA1, 0x02, 0x75, 0x08, 0x95, 0x05, 0x15, 0x00, 0x26, 0xFF,
    0x00, 0x35, 0x00, 0x46, 0xFF, 0x00, 0x09, 0x30, 0x09, 0x30, 0x09, 0x30, 0x09, 0x30, 0x09, 0x31,
    0x81, 0x02, 0x75, 0x04, 0x95, 0x01, 0x25, 0x07, 0x46, 0x3B, 0x01, 0x65, 0x14, 0x09, 0x00, 0x81,
    0x42, 0x65, 0x00, 0x75, 0x01, 0x95, 0x0A, 0x25, 0x01, 0x45, 0x01, 0x05, 0x09, 0x19, 0x01, 0x29,
    0x0A, 0x81, 0x02, 0x06, 0x00, 0xFF, 0x75, 0x01, 0x95, 0x0A, 0x25, 0x01, 0x45, 0x01, 0x09, 0x01,
    0x81, 0x02, 0xC0, 0xA1, 0x02, 0x75, 0x08, 0x95, 0x04, 0x46, 0xFF, 0x00, 0x26, 0xFF, 0x00, 0x09,
    0x02, 0x91, 0x02, 0xC0, 0xC0,
];

pub const SATURN_PAD_XINPUT_VID: u16 = 0x045E;
pub const SATURN_PAD_XINPUT_PID: u16 = 0x028E;
pub const SATURN_PAD_XINPUT_REPORT: [u8; 118] = [
    0x05, 0x01, 0x09, 0x05, 0x01, 0x00, 0x09, 0x30, 0x09, 0x31, 0x15, 0x00, 0x26, 0xFF, 0xFF, 0x35,
    0x00, 0x46, 0xFF, 0xFF, 0x95, 0x02, 0x75, 0x10, 0x81, 0x02, 0xC0, 0xA1, 0x00, 0x09, 0x33, 0x09,
    0x34, 0x15, 0x00, 0x26, 0xFF, 0xFF, 0x35, 0x00, 0x46, 0xFF, 0xFF, 0x95, 0x02, 0x75, 0x10, 0x81,
    0x02, 0xC0, 0xA1, 0x00, 0x09, 0x32, 0x15, 0x00, 0x26, 0xFF, 0xFF, 0x35, 0x00, 0x46, 0xFF, 0xFF,
    0x95, 0x01, 0x75, 0x10, 0x81, 0x02, 0xC0, 0x05, 0x09, 0x19, 0x01, 0x29, 0x0A, 0x95, 0x0A, 0x75,
    0x01, 0x81, 0x02, 0x05, 0x01, 0x09, 0x39, 0x15, 0x01, 0x25, 0x08, 0x35, 0x00, 0x46, 0x3B, 0x10,
    0x66, 0x0E, 0x00, 0x75, 0x04, 0x95, 0x01, 0x81, 0x42, 0x75, 0x02, 0x95, 0x01, 0x81, 0x03, 0x75,
    0x08, 0x95, 0x02, 0x81, 0x03, 0xC0,
];
